import { 
  getPatientFiles, 
  getFileById, 
  uploadFile, 
  updateFile, 
  deleteFile
} from './file.service.js'

// Get all files for a patient
export const getPatientFilesController = async (req, res) => {
  try {
    const { id: patientId } = req.params
    const { page, limit, search, sort } = req.query
    
    console.log('üìÅ Controller ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏ü‡∏•‡πå:')
    console.log('Patient ID:', patientId)
    console.log('Query params:', { page, limit, search, sort })
    
    const result = await getPatientFiles(patientId, {
      page: page ? parseInt(page) : undefined,
      limit: limit ? parseInt(limit) : undefined,
      search,
      sort
    })
    
    console.log('‚úÖ ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result.files.length, '‡πÑ‡∏ü‡∏•‡πå')
    
    res.status(200).json({
      success: true,
      message: '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      data: result.files,
      pagination: result.pagination
    })
  } catch (error) {
    console.error('‚ùå Controller Error:', error.message)
    res.status(400).json({
      success: false,
      message: error.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ'
    })
  }
}

// Get single file
export const getFileByIdController = async (req, res) => {
  try {
    const { id: fileId } = req.params
    
    console.log('üìÅ Controller ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏ü‡∏•‡πå:', fileId)
    
    const file = await getFileById(fileId)
    
    console.log('‚úÖ ‡∏î‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', file.name)
    
    res.status(200).json({
      success: true,
      message: '‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      data: file
    })
  } catch (error) {
    console.error('‚ùå Controller Error:', error.message)
    res.status(404).json({
      success: false,
      message: error.message || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£'
    })
  }
}

// Upload file
export const uploadFileController = async (req, res) => {
  try {
    const { id: patientId } = req.params
    const { name, description } = req.body
    const uploadedBy = req.user?.id ? req.user.id.toString() : 'system'
    
    console.log('üì§ Controller ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î:')
    console.log('Patient ID:', patientId)
    console.log('File info:', req.file)
    console.log('Body data:', req.body)
    console.log('Content-Type:', req.headers['content-type'])
    console.log('User data:', { name, description })
    
    if (!req.file) {
      return res.status(400).json({
        success: false,
        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î'
      })
    }
    
    // Prepare file data
    const fileData = {
      patientId,
      name: name || req.file.originalname,
      description: description || '',
      originalName: req.file.originalname,
      fileBuffer: req.file.buffer,
      contentType: req.file.mimetype
    }
    
    const file = await uploadFile(fileData, uploadedBy)
    
    console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', file.name)
    
    res.status(201).json({
      success: true,
      message: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      data: file
    })
  } catch (error) {
    console.error('‚ùå Controller Error:', error.message)
    res.status(400).json({
      success: false,
      message: error.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ'
    })
  }
}

// Update file
export const updateFileController = async (req, res) => {
  try {
    const { id: fileId } = req.params
    const { name, description } = req.body
    
    console.log('üìù Controller ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå:')
    console.log('File ID:', fileId)
    console.log('Update data:', { name, description })
    
    const file = await updateFile(fileId, { name, description })
    
    console.log('‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', file.name)
    
    res.status(200).json({
      success: true,
      message: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      data: file
    })
  } catch (error) {
    console.error('‚ùå Controller Error:', error.message)
    res.status(400).json({
      success: false,
      message: error.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ'
    })
  }
}

// Delete file
export const deleteFileController = async (req, res) => {
  try {
    const { id: fileId } = req.params
    
    console.log('üóëÔ∏è Controller ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå:', fileId)
    
    const result = await deleteFile(fileId)
    
    console.log('‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
    
    res.status(200).json({
      success: true,
      message: result.message
    })
  } catch (error) {
    console.error('‚ùå Controller Error:', error.message)
    res.status(400).json({
      success: false,
      message: error.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ'
    })
  }
}

